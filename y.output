

Terminals which are not used:

   BRACKET
   EXCLA
   INV_EXCLA
   ALPHA


Conflict in state 39 between rule 19 and token PLUS resolved as reduce.
Conflict in state 39 between rule 19 and token MINUS resolved as reduce.
Conflict in state 39 between rule 19 and token MUL resolved as shift.
Conflict in state 39 between rule 19 and token DIVIDE resolved as shift.
Conflict in state 40 between rule 20 and token PLUS resolved as reduce.
Conflict in state 40 between rule 20 and token MINUS resolved as reduce.
Conflict in state 40 between rule 20 and token MUL resolved as shift.
Conflict in state 40 between rule 20 and token DIVIDE resolved as shift.
Conflict in state 41 between rule 21 and token PLUS resolved as reduce.
Conflict in state 41 between rule 21 and token MINUS resolved as reduce.
Conflict in state 41 between rule 21 and token MUL resolved as reduce.
Conflict in state 41 between rule 21 and token DIVIDE resolved as reduce.
Conflict in state 42 between rule 22 and token PLUS resolved as reduce.
Conflict in state 42 between rule 22 and token MINUS resolved as reduce.
Conflict in state 42 between rule 22 and token MUL resolved as reduce.
Conflict in state 42 between rule 22 and token DIVIDE resolved as reduce.

Grammar
rule 1    start -> statements ARAT_NETIB
rule 2    statements -> assign_arithmetic
rule 3    statements -> assign_str
rule 4    statements -> display
rule 5    statements -> functions
rule 6    identifier -> MELEYA
rule 7    identifier -> keyword
rule 8    keyword -> KEYWORD
rule 9    functions -> identifier LBRACKET RBRACKET body
rule 10   body -> HULET_NETIB statements ARAT_NETIB
rule 11   assign_arithmetic -> identifier EQ expr
rule 12   assign_str -> identifier EQ strings
rule 13   strings -> STRING_LIT
rule 14   strings -> STRING_VAR
rule 15   display -> PRINT strings
rule 16   display -> PRINT strings MUL NUMBER
rule 17   display -> PRINT strings PLUS strings
rule 18   display -> PRINT expr
rule 19   expr -> expr PLUS expr
rule 20   expr -> expr MINUS expr
rule 21   expr -> expr MUL expr
rule 22   expr -> expr DIVIDE expr
rule 23   expr -> factor
rule 24   expr -> LBRACKET expr RBRACKET
rule 25   expr -> SIGN factor
rule 26   factor -> identifier
rule 27   factor -> NUMBER
rule 28   SIGN -> PLUS
rule 29   SIGN -> MINUS

Terminals, with rules where they appear

$ (-1)
error (256)
MELEYA (258) 6
STRING_LIT (259) 13
STRING_VAR (260) 14
EQ (261) 11 12
PLUS (262) 17 19 28
MINUS (263) 20 29
MUL (264) 16 21
DIVIDE (265) 22
LBRACKET (266) 9 24
RBRACKET (267) 9 24
HULET_NETIB (268) 10
BRACKET (269)
NUMBER (270) 16 27
ARAT_NETIB (271) 1 10
PRINT (272) 15 16 17 18
KEYWORD (273) 8
EXCLA (274)
INV_EXCLA (275)
ALPHA (276)

Nonterminals, with rules where they appear

start (22)
    on left: 1
statements (23)
    on left: 2 3 4 5, on right: 1 10
identifier (24)
    on left: 6 7, on right: 9 11 12 26
keyword (25)
    on left: 8, on right: 7
functions (26)
    on left: 9, on right: 5
body (27)
    on left: 10, on right: 9
assign_arithmetic (28)
    on left: 11, on right: 2
assign_str (29)
    on left: 12, on right: 3
strings (30)
    on left: 13 14, on right: 12 15 16 17
display (31)
    on left: 15 16 17 18, on right: 4
expr (32)
    on left: 19 20 21 22 23 24 25, on right: 11 18 19 20 21 22 24
factor (33)
    on left: 26 27, on right: 23 25
SIGN (34)
    on left: 28 29, on right: 25


state 0

    MELEYA	shift, and go to state 1
    PRINT	shift, and go to state 2
    KEYWORD	shift, and go to state 3

    start	go to state 47
    statements	go to state 4
    identifier	go to state 5
    keyword	go to state 6
    functions	go to state 7
    assign_arithmetic	go to state 8
    assign_str	go to state 9
    display	go to state 10



state 1

    identifier  ->  MELEYA .   (rule 6)

    $default	reduce using rule 6 (identifier)



state 2

    display  ->  PRINT . strings   (rule 15)
    display  ->  PRINT . strings MUL NUMBER   (rule 16)
    display  ->  PRINT . strings PLUS strings   (rule 17)
    display  ->  PRINT . expr   (rule 18)

    MELEYA	shift, and go to state 1
    STRING_LIT	shift, and go to state 11
    STRING_VAR	shift, and go to state 12
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    strings	go to state 18
    expr	go to state 19
    factor	go to state 20
    SIGN	go to state 21



state 3

    keyword  ->  KEYWORD .   (rule 8)

    $default	reduce using rule 8 (keyword)



state 4

    start  ->  statements . ARAT_NETIB   (rule 1)

    ARAT_NETIB	shift, and go to state 22



state 5

    functions  ->  identifier . LBRACKET RBRACKET body   (rule 9)
    assign_arithmetic  ->  identifier . EQ expr   (rule 11)
    assign_str  ->  identifier . EQ strings   (rule 12)

    EQ  	shift, and go to state 23
    LBRACKET	shift, and go to state 24



state 6

    identifier  ->  keyword .   (rule 7)

    $default	reduce using rule 7 (identifier)



state 7

    statements  ->  functions .   (rule 5)

    $default	reduce using rule 5 (statements)



state 8

    statements  ->  assign_arithmetic .   (rule 2)

    $default	reduce using rule 2 (statements)



state 9

    statements  ->  assign_str .   (rule 3)

    $default	reduce using rule 3 (statements)



state 10

    statements  ->  display .   (rule 4)

    $default	reduce using rule 4 (statements)



state 11

    strings  ->  STRING_LIT .   (rule 13)

    $default	reduce using rule 13 (strings)



state 12

    strings  ->  STRING_VAR .   (rule 14)

    $default	reduce using rule 14 (strings)



state 13

    SIGN  ->  PLUS .   (rule 28)

    $default	reduce using rule 28 (SIGN)



state 14

    SIGN  ->  MINUS .   (rule 29)

    $default	reduce using rule 29 (SIGN)



state 15

    expr  ->  LBRACKET . expr RBRACKET   (rule 24)

    MELEYA	shift, and go to state 1
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    expr	go to state 25
    factor	go to state 20
    SIGN	go to state 21



state 16

    factor  ->  NUMBER .   (rule 27)

    $default	reduce using rule 27 (factor)



state 17

    factor  ->  identifier .   (rule 26)

    $default	reduce using rule 26 (factor)



state 18

    display  ->  PRINT strings .   (rule 15)
    display  ->  PRINT strings . MUL NUMBER   (rule 16)
    display  ->  PRINT strings . PLUS strings   (rule 17)

    PLUS	shift, and go to state 26
    MUL 	shift, and go to state 27

    $default	reduce using rule 15 (display)



state 19

    display  ->  PRINT expr .   (rule 18)
    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)

    PLUS	shift, and go to state 28
    MINUS	shift, and go to state 29
    MUL 	shift, and go to state 30
    DIVIDE	shift, and go to state 31

    $default	reduce using rule 18 (display)



state 20

    expr  ->  factor .   (rule 23)

    $default	reduce using rule 23 (expr)



state 21

    expr  ->  SIGN . factor   (rule 25)

    MELEYA	shift, and go to state 1
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    factor	go to state 32



state 22

    start  ->  statements ARAT_NETIB .   (rule 1)

    $default	reduce using rule 1 (start)



state 23

    assign_arithmetic  ->  identifier EQ . expr   (rule 11)
    assign_str  ->  identifier EQ . strings   (rule 12)

    MELEYA	shift, and go to state 1
    STRING_LIT	shift, and go to state 11
    STRING_VAR	shift, and go to state 12
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    strings	go to state 33
    expr	go to state 34
    factor	go to state 20
    SIGN	go to state 21



state 24

    functions  ->  identifier LBRACKET . RBRACKET body   (rule 9)

    RBRACKET	shift, and go to state 35



state 25

    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)
    expr  ->  LBRACKET expr . RBRACKET   (rule 24)

    PLUS	shift, and go to state 28
    MINUS	shift, and go to state 29
    MUL 	shift, and go to state 30
    DIVIDE	shift, and go to state 31
    RBRACKET	shift, and go to state 36



state 26

    display  ->  PRINT strings PLUS . strings   (rule 17)

    STRING_LIT	shift, and go to state 11
    STRING_VAR	shift, and go to state 12

    strings	go to state 37



state 27

    display  ->  PRINT strings MUL . NUMBER   (rule 16)

    NUMBER	shift, and go to state 38



state 28

    expr  ->  expr PLUS . expr   (rule 19)

    MELEYA	shift, and go to state 1
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    expr	go to state 39
    factor	go to state 20
    SIGN	go to state 21



state 29

    expr  ->  expr MINUS . expr   (rule 20)

    MELEYA	shift, and go to state 1
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    expr	go to state 40
    factor	go to state 20
    SIGN	go to state 21



state 30

    expr  ->  expr MUL . expr   (rule 21)

    MELEYA	shift, and go to state 1
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    expr	go to state 41
    factor	go to state 20
    SIGN	go to state 21



state 31

    expr  ->  expr DIVIDE . expr   (rule 22)

    MELEYA	shift, and go to state 1
    PLUS	shift, and go to state 13
    MINUS	shift, and go to state 14
    LBRACKET	shift, and go to state 15
    NUMBER	shift, and go to state 16
    KEYWORD	shift, and go to state 3

    identifier	go to state 17
    keyword	go to state 6
    expr	go to state 42
    factor	go to state 20
    SIGN	go to state 21



state 32

    expr  ->  SIGN factor .   (rule 25)

    $default	reduce using rule 25 (expr)



state 33

    assign_str  ->  identifier EQ strings .   (rule 12)

    $default	reduce using rule 12 (assign_str)



state 34

    assign_arithmetic  ->  identifier EQ expr .   (rule 11)
    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)

    PLUS	shift, and go to state 28
    MINUS	shift, and go to state 29
    MUL 	shift, and go to state 30
    DIVIDE	shift, and go to state 31

    $default	reduce using rule 11 (assign_arithmetic)



state 35

    functions  ->  identifier LBRACKET RBRACKET . body   (rule 9)

    HULET_NETIB	shift, and go to state 43

    body	go to state 44



state 36

    expr  ->  LBRACKET expr RBRACKET .   (rule 24)

    $default	reduce using rule 24 (expr)



state 37

    display  ->  PRINT strings PLUS strings .   (rule 17)

    $default	reduce using rule 17 (display)



state 38

    display  ->  PRINT strings MUL NUMBER .   (rule 16)

    $default	reduce using rule 16 (display)



state 39

    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr PLUS expr .   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)

    MUL 	shift, and go to state 30
    DIVIDE	shift, and go to state 31

    $default	reduce using rule 19 (expr)



state 40

    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr MINUS expr .   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)

    MUL 	shift, and go to state 30
    DIVIDE	shift, and go to state 31

    $default	reduce using rule 20 (expr)



state 41

    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr MUL expr .   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)


    $default	reduce using rule 21 (expr)



state 42

    expr  ->  expr . PLUS expr   (rule 19)
    expr  ->  expr . MINUS expr   (rule 20)
    expr  ->  expr . MUL expr   (rule 21)
    expr  ->  expr . DIVIDE expr   (rule 22)
    expr  ->  expr DIVIDE expr .   (rule 22)


    $default	reduce using rule 22 (expr)



state 43

    body  ->  HULET_NETIB . statements ARAT_NETIB   (rule 10)

    MELEYA	shift, and go to state 1
    PRINT	shift, and go to state 2
    KEYWORD	shift, and go to state 3

    statements	go to state 45
    identifier	go to state 5
    keyword	go to state 6
    functions	go to state 7
    assign_arithmetic	go to state 8
    assign_str	go to state 9
    display	go to state 10



state 44

    functions  ->  identifier LBRACKET RBRACKET body .   (rule 9)

    $default	reduce using rule 9 (functions)



state 45

    body  ->  HULET_NETIB statements . ARAT_NETIB   (rule 10)

    ARAT_NETIB	shift, and go to state 46



state 46

    body  ->  HULET_NETIB statements ARAT_NETIB .   (rule 10)

    $default	reduce using rule 10 (body)



state 47

    $   	go to state 48



state 48

    $   	go to state 49



state 49

    $default	accept
